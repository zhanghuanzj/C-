struct TreeNode {    int val;    TreeNode *left;    TreeNode *right;    TreeNode(int x) : val(x), left(NULL), right(NULL) {}};class Solution {public:    struct TreeNode* reConstructBinaryTree(vector<int> pre,vector<int> in) {    	return solve(pre,0,pre.size()-1,in,0,in.size()-1);    }    TreeNode* solve(vector<int> &pre,int l1,int r1,vector<int> &in,int l2,int r2)    {    	if (l1>r1)    	{    		return NULL;    	}    	TreeNode *node = new TreeNode(pre[l1]);    	int index = l2;    	while(index<=r2)    	{    		if (in[index]==pre[l1])    		{    			break;    		}            index++;    	}    	int count = index-l2;    	node->left = solve(pre,l1+1,l1+count,in,l2,index-1);    	node->right = solve(pre,l1+count+1,r1,in,index+1,r2);    	return node;    }};