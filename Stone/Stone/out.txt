#include "Lexer.h"
ID:#
ID:include
STR:"Lexer.h"
-----------------------------------------------------------
#include <fstream>
ID:#
ID:include
ID:<
ID:fstream
ID:>
-----------------------------------------------------------
class Lexer
ID:class
ID:Lexer
-----------------------------------------------------------
{
ID:{
-----------------------------------------------------------

-----------------------------------------------------------
};
ID:}
ID:;
-----------------------------------------------------------
int main()
ID:int
ID:main
ID:(
ID:)
-----------------------------------------------------------
{
ID:{
-----------------------------------------------------------
	//string s;
COM://string s;
-----------------------------------------------------------
	int line = 1;
ID:int
ID:line
ID:=
NUM:1
ID:;
-----------------------------------------------------------
	string pSpace =  "\\s*";     //以>=0个空格开头的字符串
ID:string
ID:pSpace
ID:=
STR:"\\s*"
ID:;
COM://以>=0个空格开头的字符串
-----------------------------------------------------------
	string pComment = "(//.*)";  //注释(1)
ID:string
ID:pComment
ID:=
STR:"(//.*)"
ID:;
COM://注释(1)
-----------------------------------------------------------
	string pNumber = "([0-9]+)";   //数字(2)
ID:string
ID:pNumber
ID:=
STR:"([0-9]+)"
ID:;
COM://数字(2)
-----------------------------------------------------------
	string pLiteral = "(\"(\\\\\"|\\\\\\\\|\\\\n|[^\"])*\")"; //常量字符串(3,4)
ID:string
ID:pLiteral
ID:=
STR:"(\"(\\\\\"|\\\\\\\\|\\\\n|[^\"])*\")"
ID:;
COM://常量字符串(3,4)
-----------------------------------------------------------
	string pIdentifier = "([A-Z_a-z][A-Z_a-z0-9]*|==|<=|>=|&&|\\|\\|";
ID:string
ID:pIdentifier
ID:=
STR:"([A-Z_a-z][A-Z_a-z0-9]*|==|<=|>=|&&|\\|\\|"
ID:;
-----------------------------------------------------------
	string pPunc = "[!\"#$%&'()*+,-./:;<=>?@^_`{|}~[\\]])";  //dfff
ID:string
ID:pPunc
ID:=
STR:"[!\"#$%&'()*+,-./:;<=>?@^_`{|}~[\\]])"
ID:;
COM://dfff
-----------------------------------------------------------
	pIdentifier = pIdentifier+"|"+pPunc;  //标识符(5)
ID:pIdentifier
ID:=
ID:pIdentifier
ID:+
STR:"|"
ID:+
ID:pPunc
ID:;
COM://标识符(5)
-----------------------------------------------------------
	string pPattern = pSpace+"("+pComment+"|"+pNumber+"|"+pLiteral+"|"+pIdentifier+")?";
ID:string
ID:pPattern
ID:=
ID:pSpace
ID:+
STR:"("
ID:+
ID:pComment
ID:+
STR:"|"
ID:+
ID:pNumber
ID:+
STR:"|"
ID:+
ID:pLiteral
ID:+
STR:"|"
ID:+
ID:pIdentifier
ID:+
STR:")?"
ID:;
-----------------------------------------------------------
	regex r(pPattern);
ID:regex
ID:r
ID:(
ID:pPattern
ID:)
ID:;
-----------------------------------------------------------

-----------------------------------------------------------
	fstream fio = fstream("test.txt");
ID:fstream
ID:fio
ID:=
ID:fstream
ID:(
STR:"test.txt"
ID:)
ID:;
-----------------------------------------------------------
	fstream fio2 = fstream("out.txt");
ID:fstream
ID:fio2
ID:=
ID:fstream
ID:(
STR:"out.txt"
ID:)
ID:;
-----------------------------------------------------------

-----------------------------------------------------------
	while (!fio.eof())
ID:while
ID:(
ID:!
ID:fio
ID:.
ID:eof
ID:(
ID:)
ID:)
-----------------------------------------------------------
	{
ID:{
-----------------------------------------------------------
		string s;
ID:string
ID:s
ID:;
-----------------------------------------------------------
		getline(fio,s);
ID:getline
ID:(
ID:fio
ID:,
ID:s
ID:)
ID:;
-----------------------------------------------------------
		fio2<<s<<endl;
ID:fio2
ID:<
ID:<
ID:s
ID:<
ID:<
ID:endl
ID:;
-----------------------------------------------------------
		smatch match;
ID:smatch
ID:match
ID:;
-----------------------------------------------------------
		int left = 0;
ID:int
ID:left
ID:=
NUM:0
ID:;
-----------------------------------------------------------
		int right = s.size();
ID:int
ID:right
ID:=
ID:s
ID:.
ID:size
ID:(
ID:)
ID:;
-----------------------------------------------------------
		while (left<right)
ID:while
ID:(
ID:left
ID:<
ID:right
ID:)
-----------------------------------------------------------
		{
ID:{
-----------------------------------------------------------
			//cout<<s.substr(left,right)<<endl;
COM://cout<<s.substr(left,right)<<endl;
-----------------------------------------------------------
			string str = s.substr(left);
ID:string
ID:str
ID:=
ID:s
ID:.
ID:substr
ID:(
ID:left
ID:)
ID:;
-----------------------------------------------------------
			if (regex_search(str,match,r))
ID:if
ID:(
ID:regex_search
ID:(
ID:str
ID:,
ID:match
ID:,
ID:r
ID:)
ID:)
-----------------------------------------------------------
			{
ID:{
-----------------------------------------------------------
				if (match[1].matched)
ID:if
ID:(
ID:match
ID:[
NUM:1
ID:]
ID:.
ID:matched
ID:)
-----------------------------------------------------------
				{
ID:{
-----------------------------------------------------------
					if (match[2].matched)
ID:if
ID:(
ID:match
ID:[
NUM:2
ID:]
ID:.
ID:matched
ID:)
-----------------------------------------------------------
					{
ID:{
-----------------------------------------------------------
						fio2<<"COM:"<<match[1]<<endl;
ID:fio2
ID:<
ID:<
STR:"COM:"
ID:<
ID:<
ID:match
ID:[
NUM:1
ID:]
ID:<
ID:<
ID:endl
ID:;
-----------------------------------------------------------
					}
ID:}
-----------------------------------------------------------
					else if (match[3].matched)
ID:else
ID:if
ID:(
ID:match
ID:[
NUM:3
ID:]
ID:.
ID:matched
ID:)
-----------------------------------------------------------
					{
ID:{
-----------------------------------------------------------
						fio2<<"NUM:"<<match[1]<<endl;
ID:fio2
ID:<
ID:<
STR:"NUM:"
ID:<
ID:<
ID:match
ID:[
NUM:1
ID:]
ID:<
ID:<
ID:endl
ID:;
-----------------------------------------------------------
					}
ID:}
-----------------------------------------------------------
					else if (match[4].matched)
ID:else
ID:if
ID:(
ID:match
ID:[
NUM:4
ID:]
ID:.
ID:matched
ID:)
-----------------------------------------------------------
					{
ID:{
-----------------------------------------------------------
						fio2<<"STR:"<<match[1]<<endl;
ID:fio2
ID:<
ID:<
STR:"STR:"
ID:<
ID:<
ID:match
ID:[
NUM:1
ID:]
ID:<
ID:<
ID:endl
ID:;
-----------------------------------------------------------
					}
ID:}
-----------------------------------------------------------
					else if (match[6].matched)
ID:else
ID:if
ID:(
ID:match
ID:[
NUM:6
ID:]
ID:.
ID:matched
ID:)
-----------------------------------------------------------
					{
ID:{
-----------------------------------------------------------
						fio2<<"ID:"<<match[1]<<endl;
ID:fio2
ID:<
ID:<
STR:"ID:"
ID:<
ID:<
ID:match
ID:[
NUM:1
ID:]
ID:<
ID:<
ID:endl
ID:;
-----------------------------------------------------------
					}
ID:}
-----------------------------------------------------------
				}
ID:}
-----------------------------------------------------------
				left += match.length();
ID:left
ID:+
ID:=
ID:match
ID:.
ID:length
ID:(
ID:)
ID:;
-----------------------------------------------------------
			}
ID:}
-----------------------------------------------------------
		}
ID:}
-----------------------------------------------------------
		fio2<<"-----------------------------------------------------------"<<endl;
ID:fio2
ID:<
ID:<
STR:"-----------------------------------------------------------"
ID:<
ID:<
ID:endl
ID:;
-----------------------------------------------------------
	}
ID:}
-----------------------------------------------------------
	fio2.close();
ID:fio2
ID:.
ID:close
ID:(
ID:)
ID:;
-----------------------------------------------------------
}
ID:}
-----------------------------------------------------------

-----------------------------------------------------------

-----------------------------------------------------------

-----------------------------------------------------------
