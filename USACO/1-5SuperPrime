/*
ID: zhanghu14
PROG: sprime
LANG: C++11
*/
#include <iostream>
#include <fstream>
#include <string>
#include <map>
#include <vector>
#include <unordered_set>
#include <algorithm>
#include <set>
using namespace std;

//#define STDIO
#ifdef STDIO
#define  IN		cin
#define  OUT	cout
#else
#define  IN		fin
#define  OUT	fout
#endif

int start[4] = {2,3,5,7};
int num[4] = {1,3,7,9};
bool isPrime(int v)
{
	if (v==1)
	{
		return false;
	}
	int bound = sqrt(v);
	for (int i=2;i<=bound;++i) 
	{
		if (v%i==0)
		{
			return false;
		}
	}
	return true;
}

void dfs(int v,int d,int n,vector<int> &result)
{
	if (d==n)
	{
		result.push_back(v);
		return;
	}
	if (d==0)
	{
		for (int i=0;i<4;++i) 
		{
			if (isPrime(v*10+start[i]))
			{
				dfs(10*v+start[i],d+1,n,result);
			}
		}
	}
	else
	{
		for (int i=0;i<4;++i) 
		{
			if (isPrime(v*10+num[i]))
			{
				dfs(10*v+num[i],d+1,n,result);
			}
		}
	}
}
int main()
{
	const string path = "sprime";
	ifstream fin(path+".in");
	ofstream fout(path+".out");


	int n;
	while (IN>>n)
	{
		vector<int> result;
		dfs(0,0,n,result);
		for (auto e : result) 
		{
			OUT<<e<<endl;
		}
	}
}


